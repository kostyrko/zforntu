<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>...z frontu - js</title><link href="https://kostyrko.github.io/zfrontu/" rel="alternate"></link><link href="https://kostyrko.github.io/zfrontu/feeds/js.atom.xml" rel="self"></link><id>https://kostyrko.github.io/zfrontu/</id><updated>2020-05-15T21:00:00+02:00</updated><subtitle>JS/CSS/PY</subtitle><entry><title>JS - klasy</title><link href="https://kostyrko.github.io/zfrontu/js-klasy.html" rel="alternate"></link><published>2020-05-15T21:00:00+02:00</published><updated>2020-05-15T21:00:00+02:00</updated><author><name>mkostyrko</name></author><id>tag:kostyrko.github.io,2020-05-15:/zfrontu/js-klasy.html</id><summary type="html">&lt;p&gt;Klasy pozwalają na przypisanie metod bezpośrednio to prototypów obiektów przy pomocy jednego bloku (od ES5)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;Droid&lt;/span&gt; {
    &lt;span class="nv"&gt;constructor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;, &lt;span class="nv"&gt;occupation&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;occupation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;occupation&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }

    &lt;span class="nv"&gt;logDroid&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
        &lt;span class="k"&gt;return&lt;/span&gt; `&lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; ${&lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;} &lt;span class="nv"&gt;a&lt;/span&gt; ${&lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;occupation&lt;/span&gt;} &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;metoda&lt;/span&gt; &lt;span class="nv"&gt;prototypowa&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;__proto__&lt;/span&gt;: &lt;span class="nv"&gt;Object&lt;/span&gt;
    }
}

&lt;span class="nv"&gt;const&lt;/span&gt; &lt;span class="nv"&gt;c3po&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Droid&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;C-3PO&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Protocol droid&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;const&lt;/span&gt; &lt;span class="nv"&gt;r2d2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Droid …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Klasy pozwalają na przypisanie metod bezpośrednio to prototypów obiektów przy pomocy jednego bloku (od ES5)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;Droid&lt;/span&gt; {
    &lt;span class="nv"&gt;constructor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;, &lt;span class="nv"&gt;occupation&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;occupation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;occupation&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }

    &lt;span class="nv"&gt;logDroid&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
        &lt;span class="k"&gt;return&lt;/span&gt; `&lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; ${&lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;} &lt;span class="nv"&gt;a&lt;/span&gt; ${&lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;occupation&lt;/span&gt;} &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;metoda&lt;/span&gt; &lt;span class="nv"&gt;prototypowa&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;__proto__&lt;/span&gt;: &lt;span class="nv"&gt;Object&lt;/span&gt;
    }
}

&lt;span class="nv"&gt;const&lt;/span&gt; &lt;span class="nv"&gt;c3po&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Droid&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;C-3PO&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Protocol droid&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;const&lt;/span&gt; &lt;span class="nv"&gt;r2d2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Droid&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;R2-D2&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Astromech droid&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;console&lt;/span&gt;.&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;c3po&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;Droid&lt;/span&gt; {
    &lt;span class="nv"&gt;name&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;C-3PO&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,
    &lt;span class="nv"&gt;occupation&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Protocol droid&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;W ramach klasy można również przypisać metody statyczne - takie, które nie wymagają wprowadzenie danych do funkcji konstruktora, muszą być jednak poprzedzone słowem kluczem &lt;code&gt;static&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;Droid&lt;/span&gt; {
    &lt;span class="nv"&gt;constructor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;, &lt;span class="nv"&gt;occupation&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;occupation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;occupation&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }

    &lt;span class="nv"&gt;logDroid&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
        &lt;span class="k"&gt;return&lt;/span&gt; `&lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; ${&lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;} &lt;span class="nv"&gt;a&lt;/span&gt; ${&lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;occupation&lt;/span&gt;}`
    }
    &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;greetings&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;stranger&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;you&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
      &lt;span class="k"&gt;return&lt;/span&gt; `&lt;span class="nv"&gt;Hey&lt;/span&gt; ${&lt;span class="nv"&gt;stranger&lt;/span&gt;}`&lt;span class="c1"&gt;;&lt;/span&gt;
    }

}

&lt;span class="nv"&gt;console&lt;/span&gt;.&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Droid&lt;/span&gt;.&lt;span class="nv"&gt;greetings&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;IG-88&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;Hey&lt;/span&gt; &lt;span class="nv"&gt;IG&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Pod-klasy/ sub-classes&lt;/h4&gt;
&lt;p&gt;Podklasy wprowadzone od ES6 są klasami stworzonymi na podstawie istniejących już klas i od nich dziedziczą podstawowe właściwości (jest to klonowanie istniejącej klasy z dodaniem nowych właściwości)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;Droid&lt;/span&gt; { &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;klasa&lt;/span&gt; &lt;span class="nv"&gt;wyj&lt;/span&gt;ś&lt;span class="nv"&gt;ciowa&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;rodzic&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;constructor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;, &lt;span class="nv"&gt;occupation&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;occupation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;occupation&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }

    &lt;span class="nv"&gt;logDroid&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
        &lt;span class="k"&gt;return&lt;/span&gt; `&lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; ${&lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;} &lt;span class="nv"&gt;a&lt;/span&gt; ${&lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;occupation&lt;/span&gt;}`
    }

    &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;greetings&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;stranger&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;you&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
      &lt;span class="k"&gt;return&lt;/span&gt; `&lt;span class="nv"&gt;Hey&lt;/span&gt; ${&lt;span class="nv"&gt;stranger&lt;/span&gt;}`&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Rozszerzenie klasy Droid klasą ProtocolDroid // tworzącym tym samym pod klasę klasy Droid&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;ProtocolDroid&lt;/span&gt; &lt;span class="nv"&gt;extends&lt;/span&gt; &lt;span class="nv"&gt;Droid&lt;/span&gt; {
    &lt;span class="nv"&gt;constructor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;, &lt;span class="nv"&gt;occupation&lt;/span&gt;,  &lt;span class="nv"&gt;height&lt;/span&gt;, &lt;span class="nv"&gt;homeWorld&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
        &lt;span class="nv"&gt;super&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;, &lt;span class="nv"&gt;occupation&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;; // odwołanie się do konstruktora rodzica&lt;/span&gt;

        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;height&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;homeWorld&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;homeWorld&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}

&lt;span class="nv"&gt;const&lt;/span&gt; &lt;span class="nv"&gt;c3po&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;ProtocolDroid&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;C-3PO&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Protocol droid&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;1.75&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Tatooine&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;const&lt;/span&gt; &lt;span class="nv"&gt;me8d9&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;ProtocolDroid&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;ME-8D9&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Protocol droid&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;1.72&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Takodana&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;console&lt;/span&gt;.&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;me8d9&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;ProtocolDroid&lt;/span&gt; {
    &lt;span class="nv"&gt;name&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;ME-8D9&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,
    &lt;span class="nv"&gt;occupation&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Protocol droid&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,
    &lt;span class="nv"&gt;height&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;1.72&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,
    &lt;span class="nv"&gt;homeWorld&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Takodana&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    } &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;__proto__&lt;/span&gt; : &lt;span class="nv"&gt;Droid&lt;/span&gt;

&lt;span class="nv"&gt;console&lt;/span&gt;.&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;me8d9&lt;/span&gt;.&lt;span class="nv"&gt;logDroid&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;odwo&lt;/span&gt;ł&lt;span class="nv"&gt;anie&lt;/span&gt; &lt;span class="nv"&gt;si&lt;/span&gt;ę &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nv"&gt;metody&lt;/span&gt; &lt;span class="nv"&gt;rodzica&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;dziedziczenie&lt;/span&gt; &lt;span class="nv"&gt;metod&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;ME&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;D9&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;Protocol&lt;/span&gt; &lt;span class="nv"&gt;droid&lt;/span&gt;

```&lt;span class="nv"&gt;JavaScript&lt;/span&gt;
&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;ProtocolDroid&lt;/span&gt; &lt;span class="nv"&gt;extends&lt;/span&gt; &lt;span class="nv"&gt;Droid&lt;/span&gt; {
    &lt;span class="nv"&gt;constructor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;, &lt;span class="nv"&gt;occupation&lt;/span&gt;,  &lt;span class="nv"&gt;height&lt;/span&gt;, &lt;span class="nv"&gt;homeWorld&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
        &lt;span class="nv"&gt;super&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;, &lt;span class="nv"&gt;occupation&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;; // odwołanie się do konstruktora rodzica&lt;/span&gt;

        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;height&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;homeWorld&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;homeWorld&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
    &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;learnNewLanguage&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; { &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;stworzenie&lt;/span&gt; &lt;span class="nv"&gt;nowej&lt;/span&gt; &lt;span class="nv"&gt;w&lt;/span&gt;ł&lt;span class="nv"&gt;asnej&lt;/span&gt; &lt;span class="nv"&gt;metody&lt;/span&gt; &lt;span class="nv"&gt;statycznej&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; `&lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;am&lt;/span&gt; &lt;span class="nv"&gt;unable&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;learn&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;languages&lt;/span&gt;`
    }
}

&lt;span class="nv"&gt;console&lt;/span&gt;.&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ProtocolDroid&lt;/span&gt;.&lt;span class="nv"&gt;learnNewLanguage&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; `&lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;am&lt;/span&gt; &lt;span class="nv"&gt;unable&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;learn&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;languages&lt;/span&gt;`
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Istnieje możliwość odwołania się do dziedziczonej metody statycznej np.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ProtocolDroid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;IG-88&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Hey&lt;/span&gt; &lt;span class="n"&gt;IG&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;p&gt;Źródła:&lt;/p&gt;
&lt;p&gt;http://kursjs.pl/kurs/es6/class.php&lt;/p&gt;
&lt;p&gt;https://developer.mozilla.org/pl/docs/Web/JavaScript/Reference/Classes&lt;/p&gt;</content><category term="js"></category><category term="js"></category><category term="javascript"></category><category term="klasy"></category><category term="classes"></category></entry><entry><title>JavaScript - etykietowanie funkcji</title><link href="https://kostyrko.github.io/zfrontu/js-etykietowana-funkcja.html" rel="alternate"></link><published>2020-05-11T10:00:00+02:00</published><updated>2020-05-11T10:00:00+02:00</updated><author><name>mkostyrko</name></author><id>tag:kostyrko.github.io,2020-05-11:/zfrontu/js-etykietowana-funkcja.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Template strings&lt;/em&gt; lub też &lt;em&gt;literals&lt;/em&gt; zwane po polsku &lt;em&gt;łańcuchami szablonowymi&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Łańcuchy szablonowe [wcześniej wspominałem o nich &lt;a href="https://kostyrko.github.io/zfrontu/js-podstawowe-typy.html"&gt;w tym miejscu&lt;/a&gt;] pozwalają na podstawianie zmiennych wewnątrz informacji przeznaczonymi do druku i zawartymi pomiędzy apostrofami [ warto pamiętać o tym, że stosowanie tego formatu zapisu nie wymaga używania sekwencji ucieczkowej -&amp;gt; /n]&lt;/p&gt;
&lt;p&gt;Przykładowo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;const droid …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;Template strings&lt;/em&gt; lub też &lt;em&gt;literals&lt;/em&gt; zwane po polsku &lt;em&gt;łańcuchami szablonowymi&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Łańcuchy szablonowe [wcześniej wspominałem o nich &lt;a href="https://kostyrko.github.io/zfrontu/js-podstawowe-typy.html"&gt;w tym miejscu&lt;/a&gt;] pozwalają na podstawianie zmiennych wewnątrz informacji przeznaczonymi do druku i zawartymi pomiędzy apostrofami [ warto pamiętać o tym, że stosowanie tego formatu zapisu nie wymaga używania sekwencji ucieczkowej -&amp;gt; /n]&lt;/p&gt;
&lt;p&gt;Przykładowo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;const droid = &amp;quot;r2d2&amp;quot;
const droid2 = &amp;quot;c3po&amp;quot;

console.log(`Hello 
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;droid&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;, 
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;droid2&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;`)

&amp;gt;&amp;gt;Hello 
&amp;gt;&amp;gt;r2d2, 
&amp;gt;&amp;gt;c3po
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Funkcje mogą być również wywołane poprzez zastosowania &lt;code&gt;łańcucha szablonów&lt;/code&gt; tzw &lt;code&gt;tag functions&lt;/code&gt; - wówczas części tego łańcucha nie odwołujące się do zmiennych mogą być traktowane jako tablica (podzielona w miejscach gdzie znajdują się zmienne), która musi być  zawarta jako argument&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;function&lt;/span&gt; &lt;span class="nv"&gt;droidGreeter&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;strings&lt;/span&gt;, &lt;span class="nv"&gt;droidName&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
&lt;span class="nv"&gt;console&lt;/span&gt;.&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;strings&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;] &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;droidName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;strings&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;droidName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;strings&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;]
}&lt;span class="c1"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;const&lt;/span&gt; &lt;span class="nv"&gt;droid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;c3po&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;console&lt;/span&gt;.&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;droidGreeter&lt;/span&gt;` &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;am&lt;/span&gt; ${&lt;span class="nv"&gt;droid&lt;/span&gt;} &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt;? `&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;; // array strings = [&amp;#39; I am &amp;#39;, &amp;#39; - and you? &amp;#39;]&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;  &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;am&lt;/span&gt; &lt;span class="nv"&gt;c3po&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt;?
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;c3po&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;am&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;W ten sposób można tworzyć instancje różnego rodzaju informacji wynikowych przy pomocy jednej funkcji&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;const droids = [
  {name: &amp;#39;C3PO&amp;#39;, height: &amp;#39;1.71&amp;#39;},
  {name: &amp;#39;R2D2&amp;#39;, height: &amp;#39;1.09&amp;#39;},
  {name: &amp;#39;BB8&amp;#39;, height: &amp;#39;0.67&amp;#39;},
  {name: &amp;#39;L3-37&amp;#39;, height: &amp;#39;1.79&amp;#39;},
  {name: &amp;#39;K-2SO&amp;#39;, height: &amp;#39;2.16&amp;#39;}
]

function showSpecs (arr, n, h) {
  console.log(arr[0] + n + arr[1] + h + arr[2])
}

showSpecs`This &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;droids&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; is &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;droids&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;`

&amp;gt;&amp;gt; This R2D2 is 1.09

showSpecs`This droid&amp;#39;s name is &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;droids&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; and he is &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;droids&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; m high`

&amp;gt;&amp;gt; This droid&amp;#39;s name is R2D2 and he is 1.09 m high

droids.forEach(function(droids){
  showSpecs`This &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;droids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; is &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;droids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; high`; 
})

&amp;gt;&amp;gt; This C3PO is 1.71 high
&amp;gt;&amp;gt; This R2D2 is 1.09 high
&amp;gt;&amp;gt; This BB8 is 0.67 high
&amp;gt;&amp;gt; This L3-37 is 1.79 high
&amp;gt;&amp;gt; This K-2SO is 2.16 high
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Patrz również &lt;a href="https://playcode.io/602318"&gt;tutaj&lt;/a&gt; aby popracować na powyższej funkcji w edytorze i konsoli online&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://pbs.twimg.com/media/EXpDjdDWsAE9D7D?format=jpg&amp;amp;name=large"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Źródła:
https://codeburst.io/javascript-what-are-tag-functions-97682f29521b&lt;/p&gt;</content><category term="js"></category><category term="javascript"></category><category term="tag"></category><category term="function"></category><category term="funkcja"></category><category term="etykietowanie"></category><category term="tagged function"></category></entry></feed>